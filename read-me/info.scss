/*
================================================================================
FRONT-ALEGO
--------------------------------------------------------------------------------
Arquivo de CSS modelo utilizado na documentação. Use o arquivo SCSS base desta
pasta (info.scss) para ver como foi utilizado e também para acrescentar
eventuais elementos para visualizar o arquivo final.
Não se esqueça de compilar
--------------------------------------------------------------------------------
Autor: Alessandro Guarita
Criado em: 23/11/2015
================================================================================
A PARTIR DAQUI É O CSS GENÉRICO DO FRONT-END
================================================================================
*/

// =============================================================================
// IMPORTAÇÃO DO FRONT-ALEGO
// =============================================================================
@import "fontes"; // Este arquivo precisa ser importado por conta do endereço da pasta
@import "../config/base";

/*
================================================================================
INÍCIO DO CSS ESPECÍFICO DO READ-ME
================================================================================
*/

// =============================================================================
// VARIÁVEIS GLOBAIS
// =============================================================================
$rd: 3px; // arredondamento
$pd: .2rem; // padding

// =============================================================================
// MIXINS GLOBAIS
// =============================================================================
// Grupos de demonstração que cabem na mesma linha e fazem uso de flex-box
@mixin grupo-demo($qtd: 2) {
  $margem: ($qtd - 1) * 0.5rem;
  $tamanho: 100% / $qtd;
  @include display-flex;
  @include justify-content(space-between);
  div {
    width: calc(#{$tamanho} - #{$margem});
  }
}

/*
================================================================================
PLACEHOLDERS GLOBAIS
================================================================================
*/
%codigo {
  border-radius: $rd;
  background: paleta-padrao(cinza-5);
  border: 1px solid paleta-padrao(cinza-30);
}

/*
================================================================================
TAGS
--------------------------------------------------------------------------------
Estes tags foram modificados sem classes pois são mais raros de serem utilizados
================================================================================
*/
body {
  background: cor(fundo, x-claro);
  * {
    @include texto-selecionado;
  }
}
samp {
  @extend %codigo;
  padding: .2em .4em;
  color: cor-status(erro-claro);
}
article {
  border-bottom: $borda-variante;
  padding-bottom: 6 * $margem;
  &:last-of-type {
    border-bottom-width: 0;
    padding-bottom: 0;
  }
}

/*
================================================================================
CLASSES
================================================================================
*/
// -----------------------------------------------------------------------------
// Container
// -----------------------------------------------------------------------------
%container-basico {
  max-width: 80rem;
  padding: 0 $pd * 3;
}
// -----------------------------------------------------------------------------
// Links
// -----------------------------------------------------------------------------
%link-basico {
  @extend %link--pontilhado;
  font-weight: bold;
  font-size: .85em;
  color: cor(link, escuro);
  text-transform: uppercase;
  &:hover {
    color: cor(link, escuro-hover);
  }
}
.link--readme {
  @extend %link-basico;
}
.link--externo {
  @extend %link-basico;
  &::after {
    font-family: $fonte-simbolo;
    font-size: .7em;
    content: "\e014";
    margin-left: .15em;
    vertical-align: super;
  }
}
// -----------------------------------------------------------------------------
// Ícone de arquivo/pasta
// -----------------------------------------------------------------------------
%pasta-arquivo {
  color: paleta-padrao(cinza-70);
  &::before {
    font-family: $fonte-simbolo;
    margin-right: .2em;
    font-size: .75em;
  }
}
.arquivo {
  @extend %pasta-arquivo;
  &::before {
    content: "\e140";
    vertical-align: text-bottom;
  }
}
.pasta {
  @extend %pasta-arquivo;
  &::before {
    content: "\f07b";
    vertical-align: middle;
  }
}
// -----------------------------------------------------------------------------
// Listas
// -----------------------------------------------------------------------------
$largura-dt: 12em;
$largura-dt-pq: 9em;
.lista-definicao {
  @include grupo-flex(2, 0);
  dt, dd {
    padding: .4em;
    border: 1px solid tint(cor(borda), 20%);
    margin-bottom: .5em;
  }
  dt {
    text-align: right;
    width: $largura-dt;
    background: tint(cor(fundo, claro), 60%);
    border-radius: $rd 0 0 $rd;
    samp {
      border: 0;
      background: transparent;
      padding: 0;
    }
    @media (max-width: breakpoint(pequeno)) {
      width: $largura-dt-pq;
    }
  }
  dd {
    width: calc(100% - #{$largura-dt});
    border-radius: 0 $rd $rd 0;
    border-left-width: 0;
    @media (max-width: breakpoint(pequeno)) {
      width: calc(100% - #{$largura-dt-pq});
    }
  }
}
.lista-itens {

}
.lista-ordenada {

}
.lista-config {
  @extend %lista-flex;
  margin-left: $calha * -1;
  margin-right: $calha * -1;
  li {
    margin: $calha;
  }
  span {
    font-weight: bold;
    font-family: $fonte-monoespacada;
  }
}
// -----------------------------------------------------------------------------
// Fragmentos de código
// -----------------------------------------------------------------------------
%codigo-bloco {
  @extend %codigo;
  display: block;
  margin: 1em 0;
  overflow-x: auto;
  header {
    background: fade-out(paleta-padrao(preto), .2);
    border-radius: $rd $rd 0 0;
    padding: $pd $pd*2;
    font-family: $fonte-sem-serifa;
    font-size: 1.1em;
    text-transform: uppercase;
    font-weight: bold;
    color: cor(texto, claro);
  }
  p {
    margin-top: 0;
    margin-bottom: 0;
    padding: 0 $pd * 2;
    &:first-of-type {
      margin-top: $pd;
    }
    &:last-child {
      margin-bottom: $pd;
    }
  }
}
%codigo-css {
  border-color: cor(borda, variante);
  background: tint(cor(borda, variante), 90%);
}
.codigo--html {
  @extend %codigo-bloco;
  border-color: cor(borda);
  background: tint(cor(borda), 90%);
}
.codigo--css {
  @extend %codigo-bloco;
  @extend %codigo-css;
}
.codigo--sass {
  @extend %codigo-bloco;
  @extend %codigo-css;
}
// -----------------------------------------------------------------------------
// Recuos
// -----------------------------------------------------------------------------
$i: 1;
@while $i <= 5 {
  .recuo-#{$i} {
    margin-left: $i + ($pd * 2);
  }
  $i: $i + 1;
}
// -----------------------------------------------------------------------------
// Espaços entre parágrafos
// -----------------------------------------------------------------------------
.espaco-2 {
  margin: $margem * 2 0 !important;
}

// -----------------------------------------------------------------------------
// Bloco de avisos
// -----------------------------------------------------------------------------
.aviso {
  font-size: 1.2em;
  border-left: 4px solid;
  padding-left: $pd * 5;
  color: cor(texto, medio);
  @at-root {
    %dica-aviso {
      position: relative;
      padding-left: 2.25rem;
      &::before {
        position: absolute;
        display: block;
        left: 0;
        height: 100%;
        font-family: $fonte-simbolo;
        text-align: center;
        width: 1.75rem;
      }
    }
  }
  &--dica {
    @extend .aviso;
    @extend %dica-aviso;
    color: cor-status(sucesso-escuro);
    &::before {
      content: "\e084";
      background: fade-out(cor-status(sucesso-claro), .85);
    }
  }
  &--grave {
    @extend .aviso;
    @extend %dica-aviso;
    color: cor-status(erro);
    &::before {
      content: "\e035";
      background: fade-out(cor-status(erro-claro), .85);
    }
  }
}
// -----------------------------------------------------------------------------
// Teclas de atalho
// -----------------------------------------------------------------------------
.tecla-atalho {

}
// -----------------------------------------------------------------------------
// Códigos selecionados
// -----------------------------------------------------------------------------
$codigo-selecionado: (
  tab-col--maximo: $tab-col--maximo,
  sombra-nenhuma: $sombra-nenhuma,
  sombra-simples: $sombra-simples,
  sombra-padrao: $sombra-padrao,
  sombra-difusa: $sombra-difusa,
  sombra-card: $sombra-card,
  sombra-modal: $sombra-modal,
  sombra-toaster: $sombra-toaster,
  sombra-botao: $sombra-botao,
  sombra-texto: $sombra-texto,
  sombra-texto-relevo: $sombra-texto-relevo,
  borda-nenhuma: $borda-nenhuma,
  borda-padrao: $borda-padrao,
  borda-variante: $borda-variante,
  grid-margem: $grid-margem,
  calha: '$grid-margem',
  margem: '$calha',
  transition: $transition,
  rd: $rd,

  tab-tipo: if(index($uso-classes, tabela), $tab-tipo, 'nenhuma'),
  tab--zebra: $tab--zebra,
  tab-acao-link-bloco: $tab-acao-link-bloco,

  lista-tipo: if(index($uso-classes, lista), $lista-tipo, 'nenhuma'),
  lista--zebra: $lista--zebra,
  lista--sombra: $lista--sombra,

  paginacao-tipo: if(index($uso-classes, paginacao), $paginacao-tipo, 'nenhuma'),
  paginacao-posicao: $paginacao-posicao,
  paginacao-fonte: $paginacao-fonte,

  lista-titulo: $secao-lista-titulo,
);

@each $classe, $valor in $codigo-selecionado {
  .codigo-#{$classe} {
    &::before { content: "#{$valor}"; }
  }
}
// breakpoints
@each $classe, $valor in $breakpoints {
  .codigo-bp--#{$classe} {
    &::before { content: "#{$valor}"; }
  }
}
// paleta de cores
@each $classe, $valor in $paleta {
  .codigo-paleta--#{$classe} {
    &::before { content: "#{$classe}"; }
  }
}
// lista de usos de classes:
.codigo-uso-tab--form {
  &::before { content: if(index($uso-classes, tabela-form), "sim", "não"); }
}
/*
================================================================================
HEADER
================================================================================
*/
.header {
  position: fixed;
  background: cor(fundo, escuro);
  text-align: center;
  border-bottom: 1px solid cor(borda);
  box-shadow: 0 0 3px cor(fundo, sombra);
  width: 100%;
  z-index: z(topo);
  &__menu {
    @include display-flex;
    ul {
      @extend %lista-flex;
      margin: 0;
    }
    li {
      padding: .25em .5em;
      font-weight: bold;
    }
    &__titulo {
      background: fade-out(paleta-padrao(preto), .3);
      color: cor(texto, destaque);
    }
    a, &__ativo {
      text-decoration: none;
      font-size: .9em;
      font-weight: bold;
      color: cor(texto, claro);
      opacity: .8;
      text-shadow: 1px 1px 0 fade-out(cor(fundo, sombra), .8);
    }
    a {
      &:hover {
        opacity: 1;
      }
    }
    &__ativo {
      opacity: 1;
      font-weight: bold;
    }
  }
}
/*
================================================================================
ÁREA PRINCIPAL | main
================================================================================
*/
main {

}
/*
================================================================================
ÁREA PRINCIPAL | menu
================================================================================
*/
.menu {
  top: 3em;
  position: relative;
  overflow-y: auto;
  max-height: 100vh;
  @media (min-width: breakpoint(pequeno)) {
    position: fixed;
    width: 11em;
  }
  ul {
    margin: 0;
  }
  a {
    color: cor(lista, escura);
    font-weight: bold;
    font-size: .9em;
    transition: $transition;
    &:hover {
      background: cor(lista);
      color: cor(texto, claro);
    }
  }
  input:checked ~ {
    ul.lista--link { display: none; }
    .menu__subtitulo .secao-lista__icone {
      transform: rotate(-90deg);
    }
  }
  &__subtitulo {
    label {
      @include display-flex;
      cursor: pointer;
      padding: $lista-padding;
      font-size: 1rem;
    }
    .secao-lista__titulo {
      font-family: $fonte-sem-serifa;
    }
  }
}
/*
================================================================================
ÁREA PRINCIPAL | conteúdo
================================================================================
*/
.principal {
  .menu + & {
    @media (min-width: breakpoint(pequeno)) {
      margin-left: 12em;
    }
  }
  article {
    padding-top: 2.5em;
  }
}
/*
================================================================================
ÁREA PRINCIPAL | DEMO
================================================================================
*/
#demo {

}
// -----------------------------------------------------------------------------
// CLASSES DE PLACEHOLDERS
// -----------------------------------------------------------------------------
// Converte um placeholder em classe
// -----------------------------------------------------------------------------
@mixin classe($classe) {
  .#{$classe} { @extend %#{$classe}; }
}
@include classe(titulo--borda);
@include classe(link--sem-sublinhado);
@include classe(link--borda);
@include classe(link--pontilhado);
@include classe(lista-sem-marcador);
/*
--------------------------------------------------------------------------------
CONFIGURAÇÕES ESCOLHIDAS | TEXTOS
--------------------------------------------------------------------------------
*/
@mixin escolha($mod, $classe) {
  &--#{$mod} {
    &::before { content: "#{$classe}"; }
  }
}
%escolha-base {
  font-weight: bold;
}
.escolha {
  @include escolha(tema, $cores-tema);
  @include escolha(grid-margem, $grid-margem);
  @include escolha(grid-max, $grid-max);
  @include escolha(grid-qtd, $grid-qtd);
}
.funcao {
  font-size: .7em;
  font-family: $fonte-monoespacada;
  &::before {
    display: block;
  }
}
// ----------------------------------------------------------------------------
// CORES | PALETAS/TONS
// ----------------------------------------------------------------------------
$cores-paleta: (
  basica,
  secundaria,
  // Insira o nome das paletas adicionais aqui
);
$tema-texto: (padrao, claro, medio, destaque, titulo);
$tema-fundo: (padrao, claro, x-claro, escuro, sombra);
$tema-borda: (padrao, variante);
$tema-link: (padrao, hover, escuro, escuro-hover);
$tema-formulario: (padrao, placeholder, ativo, fundo);
$tema-botao: (padrao, claro, escuro, secundario, secundario-claro, secundario-escuro);
$tema-tabela: (borda, borda-clara, borda-escura, fundo, titulo);
$tema-lista: (padrao, clara, escura);
$tema-modal: (fundo, titulo-fundo, titulo-texto);
$tema-paginacao: (padrao, clara, escura);
$tema-breadcrumbs: (link, atual);
$tema-card: (fundo, borda, titulo, destaque);
$tema-secao-lista: (padrao, clara);
/*
--------------------------------------------------------------------------------
CORES | CLASSE BÁSICA
--------------------------------------------------------------------------------
*/
.demo__paleta {
  $qt: 7;
  @extend %lista-flex;
  @include grupo-flex($qt, rem(10));
  li {
    line-height: 1;
  }
  @each $paleta, $item in $cores-paleta {
    &--#{$paleta} {
      @extend %lista-flex;
    }
  }
}
.cor {
  width: 100%;
  height: 45px;
  display: block;
  margin-bottom: .2em;
}
/*
--------------------------------------------------------------------------------
CORES | PALETA PADRÃO
--------------------------------------------------------------------------------
*/
@each $cor, $item in $paleta-padrao {
  .demo__cor--#{$cor} {
    .cor { background: $item; }
    .funcao {
      &::before {
        content: "paleta-padrao(#{$cor})";
      }
    }
  }
}
/*
--------------------------------------------------------------------------------
CORES | CORES STATUS
--------------------------------------------------------------------------------
*/
@each $cor, $item in $cor-status {
  .demo__cor--#{$cor} {
    .cor { background: $item; }
    .funcao {
      &::before {
        content: "cor-status(#{$cor})"
      }
    }
  }
}
/*
--------------------------------------------------------------------------------
CORES | PALETA
--------------------------------------------------------------------------------
*/
$paleta-fonte: .8em;
@each $paleta, $item in $cores-paleta {
  .demo__paleta--#{$paleta} {
    .demo__cor--principal {
      @include flex(5);
      @include order(1);
      background: paleta(#{$paleta});
      .funcao {
        font-size: $paleta-fonte;
        &::before {
          content: "paleta(#{$paleta})";
        }
      }
    }
    $c: 1;
    @while $c <=10 {
      $d: $c + 10;
      $x: $c * 10;
      $y: 110 - $x;
      li:nth-child(#{$c}) {
        @include order(0);
        background: paleta(#{$paleta}, clara, $y);
        .funcao {
          &::before {
            content: "paleta(#{$paleta}, clara, #{$y})";
          }
        }
      }
      li:nth-child(#{$d}) {
        @include order(2);
        background: paleta(#{$paleta}, escura, $x);
        .funcao {
          color: paleta-padrao(branco);
          &::before {
            content: "paleta(#{$paleta}, escura, #{$x})";
          }
        }
      }
      $c: $c + 1;
    }
    .funcao {
      font-size: 0;
      margin: auto;
    }
    .cor {
      @extend %flex;
    }
  }
}
.demo__cor {
  @include flex(1);
  transition:  all .5s $ease-out-quad 0s;
  &--principal {
    transition: all .5s $ease-out-quad 0s;
  }
  &:hover {
    @include flex(5);
    .funcao {
      font-size: $paleta-fonte;
    }
    & ~ .demo__cor--principal {
      @include flex(1);
      font-size: 0;
    }
  }
}

/*
--------------------------------------------------------------------------------
CORES | TEMA ESCOLHIDO
--------------------------------------------------------------------------------
*/
@mixin classes-paleta($item, $tema) {
  @each $tipo in $tema {
    .demo__cor__#{$item}--#{$tipo} {
      .cor { background: cor(#{$item}, #{$tipo}); }
      .funcao {
        @if $tipo == padrao {
          font-weight: bold;
          font-size: .8em;
          &::before { content: "cor(#{$item})" }
        } @else {
          &::before { content: "cor(#{$item}, #{$tipo})" }
        }
      }
    }
  }
}
@include classes-paleta(texto, $tema-texto);
@include classes-paleta(fundo, $tema-fundo);
@include classes-paleta(borda, $tema-borda);
@include classes-paleta(link, $tema-link);
@include classes-paleta(formulario, $tema-formulario);
@include classes-paleta(botao, $tema-botao);
@include classes-paleta(tabela, $tema-tabela);
@include classes-paleta(lista, $tema-lista);
@include classes-paleta(modal, $tema-modal);
@include classes-paleta(paginacao, $tema-paginacao);
@include classes-paleta(breadcrumbs, $tema-breadcrumbs);
@include classes-paleta(card, $tema-card);
@include classes-paleta(secao-lista, $tema-secao-lista);
/*
--------------------------------------------------------------------------------
SÍMBOLOS | LISTA BÁSICA
--------------------------------------------------------------------------------
*/
.demo__simbolos {
  $qt: 12;
  @extend %lista-flex;
  @include grupo-flex($qt, rem(10));
  li {
    line-height: 1;
  }
  .icone {
    @extend %codigo;
    width: 100%;
    display: block;
    margin-bottom: .2em;
    font-size: 3rem;
    padding: .2em;
    text-align: center;
    &::before {
      content: "?";
    }
  }
  .funcao {
    text-align: center;
    &::before { content: "sem ícone"; }
  }
}
/*
--------------------------------------------------------------------------------
SÍMBOLOS | SÍMBOLOS
--------------------------------------------------------------------------------
*/
@each $classe, $ico in $icones {
  .demo__ico-#{$classe} {
    .icone {
      &::before {
        font-family: $fonte-simbolo;
        content: "#{$ico}";
      }
    }
    .funcao { &::before { content: ".ico-#{$classe}"; } }
  }
}
/*
--------------------------------------------------------------------------------
VARIÁVEIS | DEMONSTRAÇÃO | lista básica
--------------------------------------------------------------------------------
*/
.demo__variaveis {
  $qt: 8;
  @extend %lista-flex;
  @include grupo-flex($qt, $calha);
  li {
    line-height: 1;
    @extend %flex;
    @include flex-wrap;
  }
  .caixa {
    @include flex(1);
    height: rem(70);
    padding: 1em;
    background: tint(cor(fundo, claro), 75%);
    margin-bottom: .2em;
    text-align: center;
  }
  .funcao {
    width: 100%;
    text-align: center;
  }
}
// -----------------------------------------------------------------------------
// VARIÁVEIS | DEMONSTRAÇÃO | lista de variáveis
// -----------------------------------------------------------------------------
$variaveis: (
  // Sombras
  sombra-nenhuma: $sombra-nenhuma,
  sombra-padrao: $sombra-padrao,
  sombra-simples: $sombra-simples,
  sombra-difusa: $sombra-difusa,
  sombra-texto: $sombra-texto,
  sombra-texto-relevo: $sombra-texto-relevo,
  sombra-card: $sombra-card,
  sombra-modal: $sombra-modal,
  sombra-toaster: $sombra-toaster,
  sombra-botao: $sombra-botao,
  // Bordas
  borda-nenhuma: $borda-nenhuma,
  borda-padrao: $borda-padrao,
  borda-variante: $borda-variante,
  //	Margens
  transition: $transition,
  // Raio de arredondamento
  rd: $rd,
);
// -----------------------------------------------------------------------------
// VARIÁVEIS | DEMONSTRAÇÃO | classes geradas
// -----------------------------------------------------------------------------
@each $var, $valor in $variaveis {
  .demo__var--#{$var} {
    .funcao { &::before { content: "$#{$var}"; } }
    @if str-slice($var, 1, 6) == "sombra" {
      .caixa { box-shadow: $valor; }
    }
    @if str-slice($var, 1, 5) == "borda" {
      .caixa { border: $valor; }
    }
    @if $var == "transition" {
      .caixa {
        transition: $transition;
        &:hover {
          background: tint(cor(fundo, escuro), 15%);
        }
      }
    }
    @if $var == "rd" {
      .caixa {
        background: tint(cor(fundo, claro),25%);
        border-radius: $rd;
      }
    }
  }
}
// -----------------------------------------------------------------------------
// TABELAS
// -----------------------------------------------------------------------------
.tab-demo {
  @include grupo-demo;
}
$tab-tipos: (tipo-1, tipo-2);
.tab {
  @each $tab in $tab-tipos {
    &--#{$tab} {
      @extend %tab-#{$tab};
      &--form {
        @extend .tab--#{$tab};
        @extend %tab--form;
      }
    }
  }
  &--zebra {
    @extend %tab--zebra;
  }
  &--acao-link-bloco {
    %tab-acoes-icone {
			display: inline-block;
			padding: .5em;
			&:hover {
				color: cor(texto, clara);
				background: darken(cor(tabela, titulo), 5%);
			}
		}
		.tab__acoes {
			padding: 0;
		}
  }
}
// -----------------------------------------------------------------------------
// LISTAS
// -----------------------------------------------------------------------------
.lista-demo {
  @include grupo-demo(3);
}
$lista-tipos: (tipo-1, tipo-2);
.lista {
  @each $lista in $lista-tipos {
    &--#{$lista} {
      @extend %lista--#{$lista};
      .lista__titulo {
        @extend %lista--#{$lista}__titulo;
      }
      &--link {
        @extend %lista--#{$lista};
        li:not(.lista__titulo) {
          padding: 0;
        }
        a, span {
          @extend %link-block;
          padding: $lista-padding;
        }
        .lista__titulo {
          @extend %lista--#{$lista}__titulo;
        }
      }
    }
  }
  &--zebra {
    li {
      &:not(.lista__titulo) {
        background: cor(fundo, x-claro);
        &:nth-child(odd):not(.lista__titulo) { background: cor(lista, clara); }
      }
    }
  }
  &--sombra {
    box-shadow: $sombra-card;
  }
}
.lista--tipo-2, .lista--tipo-2--link {
  .lista__titulo {
    background: transparent;
  }
}
// -----------------------------------------------------------------------------
// PAGINAÇÃO
// -----------------------------------------------------------------------------
$paginacao-tipos: (tipo-1, tipo-2);
@mixin extend-paginacao($classe) {
  .#{$classe} {
    @extend .pagination .#{$classe};
  }
}
.pagination {
  @each $paginacao in $paginacao-tipos {
    &--#{$paginacao} {
      @extend %paginacao--#{$paginacao};
      @extend %flex;
  		@include justify-content($paginacao-posicao);
  		@include align-items(flex-end);
  		font-size: $paginacao-fonte;
  		padding: .5rem 0;
  		.gap {
  			@extend %paginacao-item;
  			padding: $paginacao-padding;
  			color: cor(paginacao, escura);
  		}
  		.prev, .first {
  			@extend %paginacao-voltar;
  		}
  		.next, .last {
  			@extend %paginacao-avancar;
  		}
  		a {
  			@extend %paginacao-item;
  			@extend %link-block;
  			color: cor(paginacao);
  			padding: $paginacao-padding;
  		}
  		.current{
  			@extend %paginacao-item;
  			@extend %paginacao-elemento-ativo;
  			z-index: 2;
  			padding: $paginacao-padding;
  		}
    }
  }
}
