// =============================================================================
// CONFIG
// =============================================================================
// FRONT-ALEGO | Framework da Assembleia Legislativa do Estado de Goiás
// Autor: Alessandro Guarita
// -----------------------------------------------------------------------------
// Criado em: 20/10/2015
// -----------------------------------------------------------------------------
// Define as diversas configurações do front-end da Alego.
// Aqui você vai definir os tipos de tabela, formulário e assim por diante, além
// do tema usado das cores. ATENÇÃO: as cores devem ser definidas em outro
// arquivo
// -----------------------------------------------------------------------------
// CHANGELOG
// 20/10/2015 | Criação do arquivo e puxada as configurações de demais arquivos
// =============================================================================

// =============================================================================
// MEDIA QUERY | BREAKPOINTS
// -----------------------------------------------------------------------------
// Breakpoints utilizando rem. Utilizando na função breakpoint
// Ver: http://bradfrost.com/blog/post/7-habits-of-highly-effective-media-queries/#relative
// =============================================================================
$breakpoints: (
  pequeno: rem(480),
	medio: rem(768),
	grande: rem(1024),
	extra-grande: rem(1200),
);

// =============================================================================
// USO DE CLASSES
// -----------------------------------------------------------------------------
// Valores: sim | não
// Define se vai criar algumas classes. Ao escolher "não" as classes não vão ser
// escritas no CSS final, deixando-o mais leve.
// -----------------------------------------------------------------------------
// Se você criar uma classe personalizada do zero, fará no arquivo referente na
// página "extra". Neste caso, mesmo que abaixo apareça "não", sua classe vai
// aparecer no CSS
// =============================================================================
$grid-usa-container: sim;
$tab-usa: sim;
$modal-usa: sim;
$paginacao-usa: sim;
$card-usa: sim;
$breadcrumbs-usa: sim;
$toaster-usa: sim;
$form-grupo-usa: sim; // grupos de formulários
$form-grupo-usa-pre: não; // se cria classes para espaçar os formulários
$form-usa: sim;
$botao-usa: sim;
$botao-status-usa: sim;


// =============================================================================
// TEMA DE CORES
// -----------------------------------------------------------------------------
// Escolha aqui qual o tema de cores usado. As cores devem ser definidas no
// arquivo _cores.scss
// -----------------------------------------------------------------------------
// Temas disponíveis: principal | monocromatico | cinza
// Ao acrescentar um tema, ou quiser alterar, basta mudar na variável abaixo
// =============================================================================
$cores-tema: principal;

// =============================================================================
// GRID
// -----------------------------------------------------------------------------
// Definições básicas da grid
// =============================================================================
// $grid-qtd: a quantidade de grids usadas
// $grid-margem: o espaço entre as grids
// $grid-max: a largura máxima da grid
// -----------------------------------------------------------------------------
$grid-qtd: 12;
$grid-margem: rem(10); // afeta a variávei $calha definida no arquivo variaveis.scss
$grid-max: rem(1600);

// MAPA DAS SEÇÕES
// -----------------------------------------------------------------------------
// Inclua no mapa abaixo as seções (as classes) que você está criando e o número
// de grids que ela ocupa
// Para facilitar a leitura, salte uma linha para definir grupos
// Exemplo:
// $grid: (
//   header-titulo: 10,
//   header-sair: 2,
//
//   nav: 2,
//   principal: 10,
// );
// -----------------------------------------------------------------------------
$grid: (

);

// =============================================================================
// TABELAS
// =============================================================================
// Escolhe o tipo de tabela a ser usada. Valores: pontilhada | linha
// -----------------------------------------------------------------------------
$tab-escolhida: pontilhada;

//	Define as variações. Valores: sim | não
//	$tab--zebra: define se a tabela é zebrada ou não
//	$tab--formulario: ativa a variação --form
//  $tab-acao-link-bloco: o ícone é um bloco e ocupa a altura da célula
// 	$tab-col--maximo: o valor máximo que pode ser ajustado através de
// 		placeholder.
// -----------------------------------------------------------------------------
$tab--zebra: sim;
$tab--form: não;
$tab-acao-link-bloco: não;
$tab-col--maximo: 600;

// Cria classes para definir as larguras das colunas. Coloque valor em pixels,
// mas sem unidade. Abaixo é criada a classe e o nome que você escolheu aparece
// com dois traços. Exemplo: .col--classe_criada
// -----------------------------------------------------------------------------
//	Largura fixa
$largura-tabela-col: (
	acoes: 70,
);
//	Largura mínima
$largura-tabela-col-min: (
);
//	Largura máxima
$largura-tabela-col-max: (
);

// =============================================================================
// PAGINAÇÃO
// =============================================================================
// Escolhe o tipo de paginação a ser usada. Valores: basica | box
// -----------------------------------------------------------------------------
$paginacao-tipo: box;

//	Define alinhamento da paginação. Valores: flex-start (esquerda) |
//	flex-end (direita) | center
//	----------------------------------------------------------------------------
$paginacao-posicao: center;
$paginacao-fonte: .65rem; // tamanho da fonte

// =============================================================================
// MODAL
// =============================================================================
// Escolha o tipo a ser usado. Valores: sutil | janela
// -----------------------------------------------------------------------------
$modal-tipo: janela;

// =============================================================================
// CARDS
// =============================================================================
// Escolha o tipo a ser usado. Valores: linha | pontilhado
// -----------------------------------------------------------------------------
$card-tipo: linha; // linha | pontilhado

// =============================================================================
// BREADCRUMBS
// =============================================================================
// Escolha o tipo a ser usado. Valores: simples | box
// -----------------------------------------------------------------------------
$breadcrumbs-tipo: simples; // simples | box

// =============================================================================
// TOASTER
// =============================================================================
// Escolha o tipo a ser usado. Valores: fundo | linha
// -----------------------------------------------------------------------------
$toaster-tipo: fundo;

// $toaster-horizontal: define se começa à esquerda ou à direita.
//   Valores: left | right
// $toaster-vertical: define se começa em cima ou em baixo.
//   Valores: top | bottom
// $toaster-distancia: define a distância que começa da borda do browser.
// $toaster-distancia-vertical: define o multiplicador da distância vertical.
//   Use para quando for distanciar de algum elemento do layout (como por
//   exemplo o cabeçalho ou o rodapé)
// -----------------------------------------------------------------------------
$toaster-horizontal: right;
$toaster-vertical: bottom;
$toaster-distancia: 2em;
$toaster-distancia-vertical: 1;

// =============================================================================
// FORMULÁRIOS
// =============================================================================
// Escolha o tipo a ser usado. Valores: pontilhado | linha | caixa
// -----------------------------------------------------------------------------
$form-tipo: linha;

// $label-tipo: determina se o label vai ser na mesma linha ou se vai ter quebra
//   Valores: flutuante | colado
$label-tipo: colado;
// $form-radio-check-personaliza: determina se vai usar o radio buttom ou
// checkbox personalizado ou o padrão do navegador.
//   Valores: sim | não
$form-radio-check-personaliza: sim;

// $botao-tipo e $botao-secundario: define o tipo de botão a ser usado se o
// $botao-secundario for igual ao $botao-tipo ele ficará com outra cor
//   Valores: simples, simples-1 | claro, claro-1 | escuro, escuro-1
//   ($botao-secundario aceita "$botao-tipo" como valor)
$botao-tipo: escuro-1;
$botao-secundario: $botao-tipo;
// Define se a sombra do botão vai ser da cor do texto ou se vai ser preta
$botao-sombra-colorida: sim;
